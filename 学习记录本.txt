7.30：学习文件IO读取GPS文本数据并开始解析
7.31：继续解析数据

7.30：基本实现协议解析
8.1：继续完善解析并加入筛选条件

8.1 基本完成GPS协议的解析
8.2 完善解析并添加单个参数筛选和组合参数筛选功能

8.2 完成NMEA协议的基础筛选功能
8.3 继续完善筛选功能

8.3 完成协议的筛选并输出到文本查看
8.6 新给的数据文本中含有GLL(定位地理信息)数据帧，加入GLL处理并对软件整体调试

8.6 添加了GLL数据帧的解析并完善筛选功能
8.7 添加数据帧的校验，继续完善

8.7 添加了数据帧校验代码，学习git并会使用命令上传本地文件
8.8 加入校验完善NMEA0183解析任务，继续学习git


10.19 修复ET500BUG,区别需求里ACC的输出和检测功能
10.22 继续修复ET500BUG,继续跟进

10.22 了解蓝牙GATT通用协议规范 NF2321工程学习蓝牙功能的实现
10.23 查找工程中GATT协议接口的封装实现，继续学习蓝牙

10.23 熟悉了bcm文件夹目录，根据PXP-Profile文档学习工程中PXP的相关定义
10.24 继续学习GATT协议接口的使用，思考track层是如何封装原始接口

10.24 熟悉不同项目蓝牙功能的区别，了解添加和修改蓝牙宏开关并在bcm底层添加相应内容
10.25 尝试创建自己的蓝牙宏开关，并调用底层接口编写蓝牙的连接，断开，广播搜索等函数

10.25 看bcm底层接口，熟悉蓝牙的连接,断开和发送等接口函数
10.26 继续用接口实现相关基础功能函数，查找自己工程蓝牙连接重启和密钥不匹配的问题

10.26 总结了蓝牙作为客户端和服务端的连接，断开等函数，继续查找密钥不匹配问题
10.29 继续实现蓝牙连接，断开和广播等基础功能，查找蓝牙连接BUG

10.29 实现蓝牙基本连接，断开功能，学习Catcher调试软件
10.30 继续实现蓝牙广播等功能 用Catcher调试连接问题

10.30 加入蓝牙服务端部分基本功能，等待验证
10.31 加入蓝牙客户端部分功能，验证蓝牙基本功能

10.31 NF2321工程修改部分功能为服务端，可正常连接和通信
11.1  继续验证蓝牙功能 整理出原始工程添加差异和底层接口文档

11.1  整理出BLE工程接口文档，蓝牙相关功能的执行流程
11.2  根据现有需求继续分析蓝牙的应用流程，完善文档

11.2  工程增加蓝牙补丁编译成功，查找补丁更新的接口
11.3  修改更新补丁后部分失效的功能，验证更新的蓝牙底层接口

11.3  整理了补丁新特性，按补丁更新了工程客户端回调表，编译track通过，LINK出现错误
11.5  根据log查找编译错误原因，继续编译

11.5  熟悉GT411整体需求，细化了分工
11.6  开始做单片机的gsensor传感器驱动

11.6  查找震动传感器gsensor资料，初步完成驱动协议
11.7  今天初步完成gsensor的驱动和数据采集

11.7 gsensor通过协议驱动，可能因为时钟和延时的问题目前无法读取
11.8 继续查找相关资料，争取驱动gsensor

11.8 gsensor驱动，硬件IIC和软IIC尝试驱动都无法读到地址
11.9 询问硬件gsensor的接线，继续Gsensor驱动

11.9  单片机gsensor驱动，完成厂测震动检测功能，但经测试硬件问题导致不稳定。
11.12 继续加入gsensor的数据处理，完善gsensor的功能
遇到的问题：硬件问题影响软件的调试

11.12 完成单片机gsensor震动检测功能，三轴数据采集，协作移植到工程
11.13 根据需求对gsensor参数功能进行完善，继续功能的完善

11.13 完成单片机sensor的倾斜角度初步处理，整理工程代码逻辑
11.14 继续根据需求完善单片机功能

11.14 sensor功能对参数进行优化，看6D检测实现倾斜报警
11.15 6D检测实现倾斜报警，单片机和GSM硬件看门狗

11.15 根据传感器手册配置sensor为6D模式检测倾斜，等待验证
11.16 继续做sensor的倾斜检测

11.16 根据需求完善了sensor的震动报警，sensor倾斜检测研究
11.17 倾斜中断，尝试研究角度和阈值的关系用中断触发

11.17 GT411单片机sensor根据手册找到预设阈值与角速度的关系，单位换算
11.19 尝试根据厂家的解答实现单个方向角度的预设实现中断的触发

11.19 GT411sensor完善了碰撞报警的预设值功能,待验证，讨论倾斜中断的可行性
11.20 沟通确认需求内的倾斜中断是否改为自由落体功能，继续完善功能

11.20 GT411完善GSM给单片机的喂狗信号，完善sensor功能
11.21 发现sensor会带来功耗问题，尝试降低sensor的功耗，协助加快试产软件发布

11.21  GT411协助解决sensor休眠电流大问题，完成单片机休眠sensor震动唤醒功能
11.22  继续根据需求完善单片机功能

11.22  GT411沟通倾斜报警需求，待板子验证倾斜报警中断的效果
11.23  验证sensor倾斜中断，继续对sensor增加相关预设参数的功能

11.23  GT411实现sensor倾斜事件中断触发,调整倾斜的阈值效果
11.26  按需求继续完善倾斜中断功能，研究单片机IAP升级功能

11.26  sensor倾斜中断初步完成：但需要给一个明显运动方向才可触发(无法跟震动中断区分)
11.27  与产品经理沟通倾斜报警的效果并完善倾斜报警，继续单片机IAP功能

11.27  GT411倾斜报警沟通，待试产之后再作调整,完善倾斜角度预设功能，
11.28  继续实现单片机的IAP升级

11.28  单片机IAP功能：ST官网移植的IAP工程收在接收bin文件时无反应
11.29  继续调试IAP，还无法成功的话今天移植程工的Bootloader

11.29  单片机IAP功能，分析Ymodem协议的通信流程
11.30  继续单片机IAP功能

11.30  GT411调整Ymodem协议，单片机自己通过串口成功接收bin文件
12.1    继续单片机的IAP升级，验证由Bootloader到用户程序的跳转

12.1   单片机Bootloader到用户程序的跳转，需要调整FLASH擦写函数
12.3   继续调整FLASH的擦写调试，做GSM与单片机的升级交互逻辑

12.3 单片机IAP功能，修改Ymodem函数成功读取bin文件名称及大小
12.4 继续做用户程序的跳转，跳转成功后缩减Bootloader的大小

12.4  单片机IAP升级，几率性烧写实现Bootloader到用户程序的跳转。(官方软件可以成功烧写bin文件)
12.5  应该可以排除硬件问题，继续FLASH写入函数的验证

12.5  修改调试FLASH写入相关函数，成功实现GT411单片机IAP升级功能
12.6  完善IAP的Bootloader工程，继续实现与GSM的交互升级

12.6  GT411单片机IAP功能加入与GSM的交互逻辑，待验证
12.7  验证单片机与GSM的交互逻辑，降低Bootloader大小

12.7  看GSM对深圳YDF系列单片机的IAP升级逻辑，修改部分交互逻辑
12.10 继续实现GT411单片机的IAP升级功能

12.10 GT411单片机升级验证，由于Agps模拟器无法模拟单片机的远程升级，上传升级文件到AMS平台
进行升级验证，打日志确认了单片机的升级流程
12.11 加入GSM和单片机的升级交互，验证升级

12.11 看分支上的GT411全功能单片机软件，修改部分初始化配置满足震动灵敏和三轴准确读取
12.12 移植全功能软件的IAP用户程序，完善升级

12.12 GT411单片机功能软件用户程序移植，串口通信解析移植GSM解析流程
12.13 继续单片机功能软件的完善

12.13 单片机与GSM串口交互解析修改完成，移植了GSM中cmd->part,*pars等处理
12.14 移植GT411全功能软件的指令

12.14 整理移植的串口交互新工程，提交至版本库，移植GT411项目基础指令
12.15 继续移植GT411指令，移植报警类功能

12.15 GT411单片机指令移植完成，串口收发调整部分逻辑
12.17 验证GT411单片机的IAP升级逻辑

12.17 单片机串口交互收发不稳定，发现是指令结尾处理逻辑问题
12.18 继续完善交互逻辑，完善功能

12.18 收到420D需求，搭建单片机F031初始工程，411工程逻辑分析
12.19 完善411工程，看420D需求协助420D试产软件

12.19 420D工程完成GSM串口交互，加入ADC功能
12.20 协助420D试产软件，之后完善411工程

12.20 单片机加入LED模式切换，RTC功能
12.21 继续功能指令的添加

12.21 420D单片机串口交互，休眠唤醒协助开发
12.24 继续420D项目，空闲移植411逻辑到新工程完成IAP升级

12.24 420D试产电量灯模式完善，发出试产软件
12.25 降低休眠待机电流，实现一版420D的IAP升级程序

12.25 420D单片机移植了一版IAP工程，Ymodem通讯正常，跳转未完成(型号差别)
12.26 集中解决硬件试产需要确定的RTC晶振问题，继续完善420D功能


















