7.30：学习文件IO读取GPS文本数据并开始解析
7.31：继续解析数据

7.30：基本实现协议解析
8.1：继续完善解析并加入筛选条件

8.1 基本完成GPS协议的解析
8.2 完善解析并添加单个参数筛选和组合参数筛选功能

8.2 完成NMEA协议的基础筛选功能
8.3 继续完善筛选功能

8.3 完成协议的筛选并输出到文本查看
8.6 新给的数据文本中含有GLL(定位地理信息)数据帧，加入GLL处理并对软件整体调试

8.6 添加了GLL数据帧的解析并完善筛选功能
8.7 添加数据帧的校验，继续完善

8.7 添加了数据帧校验代码，学习git并会使用命令上传本地文件
8.8 加入校验完善NMEA0183解析任务，继续学习git


10.19 修复ET500BUG,区别需求里ACC的输出和检测功能
10.22 继续修复ET500BUG,继续跟进

10.22 了解蓝牙GATT通用协议规范 NF2321工程学习蓝牙功能的实现
10.23 查找工程中GATT协议接口的封装实现，继续学习蓝牙

10.23 熟悉了bcm文件夹目录，根据PXP-Profile文档学习工程中PXP的相关定义
10.24 继续学习GATT协议接口的使用，思考track层是如何封装原始接口

10.24 熟悉不同项目蓝牙功能的区别，了解添加和修改蓝牙宏开关并在bcm底层添加相应内容
10.25 尝试创建自己的蓝牙宏开关，并调用底层接口编写蓝牙的连接，断开，广播搜索等函数

10.25 看bcm底层接口，熟悉蓝牙的连接,断开和发送等接口函数
10.26 继续用接口实现相关基础功能函数，查找自己工程蓝牙连接重启和密钥不匹配的问题

10.26 总结了蓝牙作为客户端和服务端的连接，断开等函数，继续查找密钥不匹配问题
10.29 继续实现蓝牙连接，断开和广播等基础功能，查找蓝牙连接BUG

10.29 实现蓝牙基本连接，断开功能，学习Catcher调试软件
10.30 继续实现蓝牙广播等功能 用Catcher调试连接问题

10.30 加入蓝牙服务端部分基本功能，等待验证
10.31 加入蓝牙客户端部分功能，验证蓝牙基本功能

10.31 NF2321工程修改部分功能为服务端，可正常连接和通信
11.1  继续验证蓝牙功能 整理出原始工程添加差异和底层接口文档

11.1  整理出BLE工程接口文档，蓝牙相关功能的执行流程
11.2  根据现有需求继续分析蓝牙的应用流程，完善文档

11.2  工程增加蓝牙补丁编译成功，查找补丁更新的接口
11.3  修改更新补丁后部分失效的功能，验证更新的蓝牙底层接口

11.3  整理了补丁新特性，按补丁更新了工程客户端回调表，编译track通过，LINK出现错误
11.5  根据log查找编译错误原因，继续编译

11.5  熟悉GT411整体需求，细化了分工
11.6  开始做单片机的gsensor传感器驱动

11.6  查找震动传感器gsensor资料，初步完成驱动协议
11.7  今天初步完成gsensor的驱动和数据采集

11.7 gsensor通过协议驱动，可能因为时钟和延时的问题目前无法读取
11.8 继续查找相关资料，争取驱动gsensor

11.8 gsensor驱动，硬件IIC和软IIC尝试驱动都无法读到地址
11.9 询问硬件gsensor的接线，继续Gsensor驱动

11.9  单片机gsensor驱动，完成厂测震动检测功能，但经测试硬件问题导致不稳定。
11.12 继续加入gsensor的数据处理，完善gsensor的功能
遇到的问题：硬件问题影响软件的调试

11.12 完成单片机gsensor震动检测功能，三轴数据采集，协作移植到工程
11.13 根据需求对gsensor参数功能进行完善，继续功能的完善

11.13 完成单片机sensor的倾斜角度初步处理，整理工程代码逻辑
11.14 继续根据需求完善单片机功能

11.14 sensor功能对参数进行优化，看6D检测实现倾斜报警
11.15 6D检测实现倾斜报警，单片机和GSM硬件看门狗

11.15 根据传感器手册配置sensor为6D模式检测倾斜，等待验证
11.16 继续做sensor的倾斜检测
